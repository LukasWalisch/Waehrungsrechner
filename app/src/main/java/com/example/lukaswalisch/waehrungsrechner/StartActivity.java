package com.example.lukaswalisch.waehrungsrechner;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;


import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.TimeUnit;


public class StartActivity extends ActionBarActivity implements View.OnClickListener
{
    private Button button;
    private Spinner spinner;
    private EditText editText;
    private ProgressDialog dialog;
    private final static String URL = "http://api.fixer.io/latest";
    private JSONObject apiData;
    private String currency;
    private Double factor;


    // onCreate wird aufgerufen wenn die App gestartet wird
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_start);
        button = (Button) findViewById(R.id.start_button);
        spinner = (Spinner) findViewById(R.id.start_spinner);
        editText = (EditText) findViewById(R.id.start_editText);
        button.setOnClickListener(this); //this bezieht sich auf View.OnClickListener

        // Daten aus der Api laden
        ImportData importData = new ImportData();
        try
        {
                importData.execute();
        }
        catch (Exception e)
        {

        }
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,this.dropDownList());
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner.setAdapter(adapter);

        // Spinner Listener setzen
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id)
            {
                currency = parent.getItemAtPosition(position).toString();
                try
                {
                    factor = apiData.getDouble(currency);
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });
    }

    //autogenerated Methode für das Einstellungsmenü, überlädt die Patent-Methode
    @Override
    public boolean onCreateOptionsMenu(Menu menu)
    {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_start, menu);
        return true;
    }

    //autogenerated Methode für das Einstellungsmenü, überlädt die Patent-Methode
    @Override
    public boolean onOptionsItemSelected(MenuItem item)
    {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings)
        {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    // onClick implementiert die Funktion des Buttons
    @Override
    public void onClick(View v)
    {
        double input;
        double result;
        try
        {
            input = Double.parseDouble(editText.getText().toString());
            result = input * factor;
        }
        catch (Exception e)
        {
            Toast.makeText(getApplicationContext(),"Bitte Währung wählen und Betrag eingeben!!", Toast.LENGTH_SHORT).show();
            return;
        }

        // Aufruf der ResultActivity durch Intent
        Intent intent = new Intent(this.getApplicationContext(), ResultActivity.class);
        intent.putExtra("result", result);
        intent.putExtra("input", input);
        intent.putExtra("currency", currency);
        this.startActivity(intent); //aufruf der neuen activity
    }

    // ImportData stellt eine HttpVerbindung zur Seite "http://api.fixer.io/latest" her und
    // speichert den Content.
    //  extends AsyncTask --> läuft beim Aufrufen parallel zu anderen Tasks ab
    private class ImportData extends AsyncTask<Void, Void, Void>
    {

        protected void onPreExecute()
        {
            super.onPreExecute();
            dialog = new ProgressDialog(StartActivity.this);
            dialog.setMessage("Wait for it");
            dialog.setCancelable(false);
            dialog.show();
        }

        @Override
        protected Void doInBackground(Void... params)
        {
            try
            {
                // Http Verbindung zur Datasource herstellen
                DefaultHttpClient client = new DefaultHttpClient(); //HttpURLConection verwenden
                HttpEntity entity = null;
                HttpResponse response = null;
                HttpGet get = new HttpGet(URL);
                response = client.execute(get);
                entity = response.getEntity();
                String apiString = EntityUtils.toString(entity);
                apiData = new JSONObject(apiString);
                apiData = apiData.getJSONObject("rates");
            }
            catch(Exception e)
            {
                System.err.println(e.toString());
            }
            return null;
        }

        protected void onPostExecute(Void v)
        {
            super.onPreExecute();
            if (dialog.isShowing()) dialog.dismiss();
        }
    }

    // lädt die Daten Namen der Wöhrungen in eine Liste um sie im Spinner anzeigen zu lassen
    private List<String>  dropDownList()
    {
        List <String> dropDown = new ArrayList<String>();
        dropDown.add("Bitte Währung auswählen!");
        dropDown.add("AUD");
        dropDown.add("BGN");
        dropDown.add("BRL");
        dropDown.add("CAD");
        dropDown.add("CHF");
        dropDown.add("CNY");
        dropDown.add("CZK");
        dropDown.add("DKK");
        dropDown.add("GBP");
        dropDown.add("HKD");
        dropDown.add("HRK");
        dropDown.add("HUF");
        dropDown.add("IDR");
        dropDown.add("ILS");
        dropDown.add("INR");
        dropDown.add("JPY");
        dropDown.add("KRW");
        dropDown.add("MXN");
        dropDown.add("MYR");
        dropDown.add("NOK");
        dropDown.add("NZD");
        dropDown.add("PHP");
        dropDown.add("PLN");
        dropDown.add("RON");
        dropDown.add("RUB");
        dropDown.add("SEK");
        dropDown.add("SGD");
        dropDown.add("THB");
        dropDown.add("TRY");
        dropDown.add("USD");
        dropDown.add("ZAR");
        return dropDown;
    }
}
